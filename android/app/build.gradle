def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion "21.3.6528147"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.bobi_pay_out"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

         //签名
        signingConfigs {
            release {
                storeFile file("keystore/king.jks")
                storePassword "King.asdf"
                keyAlias "key0"
                keyPassword "King.asdf"
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }

        multiDexEnabled true
    }

    buildTypes {
          release {
            signingConfig signingConfigs.release

            minifyEnabled true  //java代码混淆设置（这个地方如果压缩的话，发布版就会崩溃）
            shrinkResources true //android资源压缩设置
            //代码压缩设置

            //读取代码压缩配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk{
                //之前看QQ微信等大佬都只用"armeabi"
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
            }
        }

        debug {
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", 'armeabi', 'x86_64', 'mips', 'mips64'
            }
	    }
    }
}

flutter {
    source '../..'
}
